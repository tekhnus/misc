#!/bin/bash
set -m

rm -rf /tmp/crsh-pids
mkfifo /tmp/crsh-pids

function get_pid() {
  exec sh -c 'echo "$PPID"'
}

(
  echo "$(get_pid)" >/tmp/crsh-pids
  echo 'server did send pid' >>/tmp/crsh-log
  ./crsh-remote
)&

IFS= read -r server_pid </tmp/crsh-pids
sleep 1  # This is a workaround so that the server has time to create fifos.

echo 'master did recieve server pid' >>/tmp/crsh-log

(
  echo "$(get_pid)" >/tmp/crsh-pids
  echo 'client did send pid' >>/tmp/crsh-log
  while true; do
    echo 'client will read' >>/tmp/crsh-log
    read -p '> ' -r line >/dev/tty
    echo "client did read $line" >>/tmp/crsh-log
    # kill -STOP -- "-$server_pid"  # Trying to fix problems with terminal apps with this.
    echo "$line"
    if [ -z "$line" ]; then
      exit
    fi
    echo 'client will sleep' >>/tmp/crsh-log
    kill -STOP -- "$(get_pid)"
    echo 'client did sleep' >>/tmp/crsh-log
  done >/tmp/crsh-command
)&

IFS= read -r reader_pid </tmp/crsh-pids
(
  while true; do
    IFS= read -r res
    if [ -z "$res" ]; then
      echo 'master will finish listening to server' >>/tmp/crsh-log
      exit
    fi
    echo "master did recieve server result ${res}" >>/tmp/crsh-log
    echo "master will stop the server" >>/tmp/crsh-log
    kill -STOP -- "-$server_pid" 2>/dev/null || break
    echo "master did stop the server" >>/tmp/crsh-log
  done </tmp/crsh-result
)&
# jobs -l
disown %3
# jobs -l

function on_sigchld () {
  if {
    kill -0 $reader_pid 2>/dev/null &&
    kill -0 $server_pid 2>/dev/null
  }; then
    return
  fi
  echo 'master will exit' >>/tmp/crsh-log
  exit
}

trap on_sigchld SIGCHLD

while true; do
  echo 'master will switch to client' >>/tmp/crsh-log
  bg %1 >/dev/null 2>/dev/null # Apparently ssh doesn't like to be stopped, so we resume it immediately.
  fg %2 >/dev/null
  echo 'master did switch to client' >>/tmp/crsh-log
  echo 'master will switch to server' >>/tmp/crsh-log
  fg %1 >/dev/null
  echo 'master did switch to server' >>/tmp/crsh-log
  sleep 0.5  # Apparently there can be a lag between recieving command status and transmittion of all data in tty, so we wait.
done
