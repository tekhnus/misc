//go:generate go run $GOFILE
package main

import "fmt"
import "log"
import "go/parser"
import "go/token"
import "go/ast"
import "os"
import "strings"

func main() {
	pkgs, err := parser.ParseDir(token.NewFileSet(), "..", func(fi os.FileInfo) bool { return !strings.Contains(fi.Name(), "_test") }, 0)
	if err != nil {
		log.Fatal(err)
	}
	outfile, err := os.Create("../index.go")
	if err != nil {
		log.Fatal(err)
	}
	defer outfile.Close()
	fmt.Fprintf(outfile, "// Code generated by genindex.go. DO NOT EDIT.\n")
	fmt.Fprintf(outfile, "package solutions\n")
	fmt.Fprintf(outfile, "var SolutionIndex = map[string]func() int{\n")
	solutions := pkgs["solutions"]
	for _, solutionFile := range solutions.Files {
		for name, obj := range solutionFile.Scope.Objects {
			if obj.Kind == ast.Fun {
				fmt.Fprintf(outfile, "  \"%s\": %s,\n", name, name)
			}
		}
	}
	fmt.Fprintf(outfile, "}\n")
}
